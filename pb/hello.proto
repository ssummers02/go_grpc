syntax = "proto3";

package api;

import "google/api/annotations.proto";

option go_package = "./gen;api_pb";


message FirmByINNRequest {
  string inn = 1;
}

message FirmInfoResponse {
  string name = 1;
  string kpp = 2;
  string inn = 3;
  string boss = 4;
}

service Greeter {
  //rpc FirmInfoGet(FirmByINNRequest) returns (FirmInfoResponse) {}
  rpc FirmInfoGet(FirmByINNRequest) returns (FirmInfoResponse) {
    option (google.api.http) = {
      post: "/inn"
      body: "*"
    };
  }
}
/*
    curl -X GET  http://localhost:8080/user/ba505e0f-1b35-47f1-8259-84b038a94183 -H "Content-type: application/json" -d '{ "uuid": "ba505e0f-1b35-47f1-8259-84b038a94183"}'
*/


/*
message Pet {
  string UserUUID = 1;
  string Name = 2;
  string UUID = 3;
  string Kind = 4;
}

message Nothing {
  bool dummy = 1;
}

message helloRequest {
  string name = 1;
}

message helloResponse {
  string greeting = 1;
}

service Api {
  rpc Create (Pet) returns (Nothing) {
    option (google.api.http) = {
      post: "/user"
      body: "*"
    };
  }
}
*/


/*
    protoc -I/usr/local/include -I. \
    -I$GOPATH/src \
    -I$GOPATH/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis \
    --go_out=plugins=grpc:. *.proto

    protoc -I/usr/local/include -I. \
    -I$GOPATH/src \
    -I$GOPATH/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis \
    --grpc-gateway_out=logtostderr=true:. \
    *.proto

*/
